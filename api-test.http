### ==============================
### CLIENTES
### ==============================

# Obtener cliente por ID
GET http://localhost:3000/api/v1/cliente/102
Content-Type: application/json

###

# Crear cliente
POST http://localhost:3000/api/v1/cliente/
Content-Type: application/json

{
  "paterno": "Ramírez",
  "materno": "Vásquez",
  "nombre": "Elena",
  "dni": "101010101013",
  "nacimiento": "1978-02-28",
  "ciudad": "Izabal",
  "direccion": "Barrio El Estor, Calle 15",
  "telefono": "78901234",
  "email": "elena.r@example.com"
}

###

# Actualizar cliente
PUT http://localhost:3000/api/v1/cliente/120
Content-Type: application/json

{
  "nombre": "Elena Sofí",
  "direccion": "Avenida 20, 15-30, Zona 10"
}



### ==============================
### CLIENTES - Nuevas funcionalidades
### ==============================

# Ver saldo del cliente
GET http://localhost:3000/api/v1/cliente/110/saldo
Content-Type: application/json

###

# Ver movimientos del cliente
GET http://localhost:3000/api/v1/cliente/110/movimientos?limite=10&pagina=1
Content-Type: application/json

###

### ==============================
### TRANSFERENCIAS - Cliente a Cliente
### ==============================

# Transferir entre clientes
POST http://localhost:3000/api/v1/cliente/110/transferir
Content-Type: application/json

{
  "cuentaDestino": 210106,
  "monto": 14.01,
  "concepto": "Pago entre amigos"
}

###

### ==============================
### TRANSFERENCIAS - Cliente a Negocio
### ==============================

# Transferir de cliente a negocio
POST http://localhost:3000/api/v1/cliente/110/transferir
Content-Type: application/json

{
  "cuentaDestino": 210106,
  "monto": 150.00,
  "concepto": "Pago a comercio"
}

###


# Pagar orden de pago
POST http://localhost:3000/api/v1/cliente/102/pagar-orden
Content-Type: application/json

{
  "codigoOrden": "ORD1234567",
  "claveAcceso": "8852"
}

###

### ==============================
### NEGOCIOS
### ==============================

# Crear negocio (devuelve usuario y clave)
POST http://localhost:3000/api/v1/negocio/
Content-Type: application/json

{
  "nombre": "Café La Esquina",
  "nit": "12345678-12",
  "ciudad": "Guatemala",
  "direccion": "5a Avenida 10-20, Zona 1",
  "telefono": "22345678",
  "email": "info@cafelaesquina.com"
}

###

# Obtener negocio por ID
GET http://localhost:3000/api/v1/negocio/2009
Content-Type: application/json

### ==============================
### NEGOCIOS - Nuevas funcionalidades
### ==============================

# Dashboard del negocio
GET http://localhost:3000/api/v1/negocio/2001/dashboard
Content-Type: application/json

###

# Generar orden de pago
POST http://localhost:3000/api/v1/negocio/2001/generar-orden
Content-Type: application/json

{
  "monto": 150.00,
  "concepto": "Pago de factura #001234",
  "vigenciaHoras": 48
}

###

# Ver órdenes generadas
GET http://localhost:3000/api/v1/negocio/2001/ordenes?estado=PENDIENTE&limite=20
Content-Type: application/json

###

# Ver todos las órdenes (sin filtro de estado)
GET http://localhost:3000/api/v1/negocio/2001/ordenes?limite=20
Content-Type: application/json

###

# Ver ingresos del negocio
GET http://localhost:3000/api/v1/negocio/2001/ingresos?fechaInicio=2024-01-01&limite=50
Content-Type: application/json

###

# Ver ingresos sin filtro de fecha
GET http://localhost:3000/api/v1/negocio/2001/ingresos?limite=20
Content-Type: application/json

### ==============================
### NEGOCIOS - Consultas Financieras
### ==============================

# Ver saldo del negocio
GET http://localhost:3000/api/v1/negocio/2002/saldo
Content-Type: application/json

###

# Ver movimientos del negocio
GET http://localhost:3000/api/v1/negocio/2002/movimientos?limite=10&pagina=1
Content-Type: application/json

###

# Ver movimientos recientes del negocio
GET http://localhost:3000/api/v1/negocio/2002/movimientos?limite=5
Content-Type: application/json

###

### ==============================
### COMPARACIÓN: Cliente vs Negocio
### ==============================

# Saldo de Cliente
GET http://localhost:3000/api/v1/cliente/110/saldo
Content-Type: application/json

###

# Saldo de Negocio
GET http://localhost:3000/api/v1/negocio/2001/saldo
Content-Type: application/json

###

# Movimientos de Cliente
GET http://localhost:3000/api/v1/cliente/110/movimientos?limite=5
Content-Type: application/json

###

# Movimientos de Negocio
GET http://localhost:3000/api/v1/negocio/2001/movimientos?limite=5
Content-Type: application/json

###

### ==============================
### PASARELA DE PAGOS (Ruta consolidada)
### ==============================

# ✅ Procesar pago con tarjeta (RUTA ÚNICA)
POST http://localhost:3000/api/v1/pagos/charge
Content-Type: application/json

{
  "merchantId": "SoCAB15",
  "cardNumber": "4000007714144690",
  "amount": 150.00,
  "expDate": "10/30",
  "cvv": "551",
  "currency": "GTQ",
  "description": "Compra en Café La Esquina"
}

###

# Obtener merchants válidos
GET http://localhost:3000/api/v1/pagos/merchants
Content-Type: application/json

###

### ==============================
### TRANSACCIONES (Solo consultas)
### ==============================

# Consultar transacción por ID
GET http://localhost:3000/api/v1/transacciones/100001
Content-Type: application/json

###

# Listar transacciones de un merchant
GET http://localhost:3000/api/v1/transacciones/merchant/SoCAB15?limite=10
Content-Type: application/json

###

### ==============================
### PRODUCCIÓN - Heroku
### ==============================

# Health check en Heroku
GET https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/widget/version
Content-Type: application/json

###

# Procesar pago con tarjeta en Heroku
POST https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/pagos/charge
Content-Type: application/json

{
  "merchantId": "STORE_001_FASHION",
  "cardNumber": "4000007714144690",
  "amount": 75.50,
  "expDate": "12/26",
  "cvv": "123"
}

###

# Generar orden de pago en Heroku
POST https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/negocio/2001/generar-orden
Content-Type: application/json

{
  "monto": 250.00,
  "concepto": "Pago de factura #FAC-2024-001",
  "vigenciaHoras": 48
}

###

# Ver saldo de cliente en Heroku
GET https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/cliente/110/saldo
Content-Type: application/json

###

# Dashboard de negocio en Heroku
GET https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/negocio/2001/dashboard
Content-Type: application/json

###

# Ver órdenes pendientes en Heroku
GET https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/negocio/2001/ordenes?estado=PENDIENTE&limite=10
Content-Type: application/json

###

# Realizar transferencia en Heroku
POST https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/cliente/102/transferir
Content-Type: application/json

{
  "cuentaDestino": 210105,
  "monto": 100.00,
  "concepto": "Transferencia de prueba desde Heroku"
}

###

# Pagar orden en Heroku
POST https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/cliente/102/pagar-orden
Content-Type: application/json

{
  "codigoOrden": "ORD1234567",
  "claveAcceso": "8852"
}

### ==============================
### TESTING ADICIONAL
### ==============================

# Health check adicional
GET https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/widget/version
Content-Type: application/json

###

# Test de merchants válidos
GET https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/pagos/merchants
Content-Type: application/json

###

# Pago con merchant de base de datos
POST https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/pagos/charge
Content-Type: application/json

{
  "merchantId": "STORE_001_FASHION",
  "cardNumber": "4000007714144690",
  "amount": 75.50,
  "expDate": "12/26",
  "cvv": "123"
}

### ==============================
### PASARELA DE PAGOS - SIMPLIFICADO
### ==============================

# 1. Obtener merchants válidos
GET http://localhost:3000/api/v1/pagos/merchants
Content-Type: application/json

###

# 2. Pago EXITOSO (solo 5 campos)
POST http://localhost:3000/api/v1/pagos/charge
Content-Type: application/json

{
  "merchantId": "SoCAB15",
  "cardNumber": "4000007714144690",
  "amount": 150.50,
  "expDate": "10/30",
  "cvv": "551"
}

###

# 3. Pago con otro merchant
POST http://localhost:3000/api/v1/pagos/charge
Content-Type: application/json

{
  "merchantId": "Ca3f2b",
  "cardNumber": "5555555555554444",
  "amount": 250.00,
  "expDate": "12/26",
  "cvv": "123"
}

###

# 4. Pago RECHAZADO (tarjeta de prueba)
POST http://localhost:3000/api/v1/pagos/charge
Content-Type: application/json

{
  "merchantId": "SoCAB15",
  "cardNumber": "4000000000000002",
  "amount": 100.00,
  "expDate": "12/26",
  "cvv": "123"
}

###

