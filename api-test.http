###############################################################################
#                                                                              #
#                     🏦 BANCO TIKAL - API REST                                #
#                     Colección Completa de Endpoints                          #
#                                                                              #
###############################################################################

# 📋 ÍNDICE DE ENDPOINTS
# ══════════════════════════════════════════════════════════════════════════
# 
# 1. SISTEMA
#    - Health Check
#    - Información General
#
# 2. CLIENTES
#    - CRUD de Clientes
#    - Consultas Financieras
#    - Transferencias
#    - Pago de Órdenes
#
# 3. NEGOCIOS
#    - CRUD de Negocios
#    - Dashboard
#    - Gestión de Órdenes de Pago
#    - Consultas Financieras
#
# 4. PASARELA DE PAGOS
#    - Obtener Merchants
#    - Procesar Pagos con Tarjeta
#    - Consultar Transacciones
#
# 5. ÓRDENES DE PAGO
#    - Generar Órdenes
#    - Consultar Órdenes
#    - Pagar Órdenes
#
# 6. ENTORNOS
#    - Local (localhost:3000)
#    - Producción (Heroku)
#
###############################################################################

@baseUrl = http://localhost:3000/api/v1
@herokuUrl = https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1

###############################################################################
#                           1️⃣ SISTEMA                                        #
###############################################################################

### Health Check
GET http://localhost:3000/health
Content-Type: application/json

### Información del API
GET {{baseUrl}}
Content-Type: application/json

###############################################################################
#                          2️⃣ CLIENTES                                        #
###############################################################################

### ────────────────────────────────────────────────────────────────────────
### CRUD DE CLIENTES
### ────────────────────────────────────────────────────────────────────────

### 2.1 Crear Cliente
POST {{baseUrl}}/cliente
Content-Type: application/json

{
  "paterno": "Ramírez",
  "materno": "Vásquez",
  "nombre": "Elena",
  "dni": "101010222213",
  "nacimiento": "1978-02-28",
  "ciudad": "Izabal",
  "direccion": "Barrio El Estor, Calle 15",
  "telefono": "78901234",
  "email": "elena.r@example.com"
}

### 2.2 Obtener Cliente por ID
GET {{baseUrl}}/cliente/102
Content-Type: application/json

### 2.3 Actualizar Cliente
PUT {{baseUrl}}/cliente/120
Content-Type: application/json

{
  "nombre": "Elena Sofía",
  "direccion": "Avenida 20, 15-30, Zona 10"
}

### ────────────────────────────────────────────────────────────────────────
### CONSULTAS FINANCIERAS DEL CLIENTE
### ────────────────────────────────────────────────────────────────────────

### 2.4 Ver Saldo del Cliente
GET {{baseUrl}}/cliente/110/saldo
Content-Type: application/json

### 2.5 Ver Movimientos del Cliente (Paginado)
GET {{baseUrl}}/cliente/110/movimientos?limite=10&pagina=1
Content-Type: application/json

### 2.6 Ver Movimientos Recientes (5 últimos)
GET {{baseUrl}}/cliente/110/movimientos?limite=5
Content-Type: application/json

### ────────────────────────────────────────────────────────────────────────
### OPERACIONES DEL CLIENTE
### ────────────────────────────────────────────────────────────────────────

### 2.7 Transferencia Cliente a Cliente
POST {{baseUrl}}/cliente/110/transferir
Content-Type: application/json

{
  "cuentaDestino": 210106,
  "monto": 14.01,
  "concepto": "Pago entre amigos"
}

### 2.8 Transferencia Cliente a Negocio
POST {{baseUrl}}/cliente/110/transferir
Content-Type: application/json

{
  "cuentaDestino": 210106,
  "monto": 150.00,
  "concepto": "Pago a comercio"
}

### 2.9 Pagar Orden de Pago
POST {{baseUrl}}/cliente/110/pagar-orden
Content-Type: application/json

{
  "codigoOrden": "ORD0584636",
  "claveAcceso": "9964"
}

###############################################################################
#                          3️⃣ NEGOCIOS                                        #
###############################################################################

### ────────────────────────────────────────────────────────────────────────
### CRUD DE NEGOCIOS
### ────────────────────────────────────────────────────────────────────────

### 3.1 Crear Negocio
POST {{baseUrl}}/negocio
Content-Type: application/json

{
  "nombre": "Banco Tikal S.A.",
  "nit": "12345678-21",
  "ciudad": "Guatemala",
  "direccion": "5a Avenida 10-20, Zona 1",
  "telefono": "59919999",
  "email": "info@bancotikal.com"
}

### 3.2 Obtener Negocio por ID
GET {{baseUrl}}/negocio/2002
Content-Type: application/json

### ────────────────────────────────────────────────────────────────────────
### CONSULTAS FINANCIERAS DEL NEGOCIO
### ────────────────────────────────────────────────────────────────────────

### 3.3 Dashboard del Negocio
GET {{baseUrl}}/negocio/2002/dashboard
Content-Type: application/json

### 3.4 Ver Saldo del Negocio
GET {{baseUrl}}/negocio/2002/saldo
Content-Type: application/json

### 3.5 Ver Movimientos del Negocio
GET {{baseUrl}}/negocio/2002/movimientos?limite=10&pagina=1
Content-Type: application/json

### 3.6 Ver Movimientos Recientes (5 últimos)
GET {{baseUrl}}/negocio/2002/movimientos?limite=5
Content-Type: application/json

### ────────────────────────────────────────────────────────────────────────
### GESTIÓN DE ÓRDENES DE PAGO
### ────────────────────────────────────────────────────────────────────────

### 3.7 Generar Orden de Pago
POST {{baseUrl}}/negocio/2002/generar-orden
Content-Type: application/json

{
  "monto": 250.50,
  "concepto": "Pago de factura #001234",
  "vigenciaHoras": 48
}

### 3.8 Ver Órdenes Pendientes
GET {{baseUrl}}/negocio/2002/ordenes?estado=PENDIENTE&limite=20
Content-Type: application/json

### 3.9 Ver Todas las Órdenes
GET {{baseUrl}}/negocio/2002/ordenes?limite=20
Content-Type: application/json

### 3.10 Ver Órdenes Pagadas
GET {{baseUrl}}/negocio/2002/ordenes?estado=PAGADO&limite=10
Content-Type: application/json

### 3.11 Ver Ingresos (con fecha)
GET {{baseUrl}}/negocio/2002/ingresos?fechaInicio=2024-01-01&limite=50
Content-Type: application/json

### 3.12 Ver Ingresos (sin filtro)
GET {{baseUrl}}/negocio/2002/ingresos?limite=20
Content-Type: application/json

###############################################################################
#                      4️⃣ PASARELA DE PAGOS                                   #
###############################################################################

### ────────────────────────────────────────────────────────────────────────
### GESTIÓN DE MERCHANTS
### ────────────────────────────────────────────────────────────────────────

### 4.1 Obtener Merchants Válidos
GET {{baseUrl}}/pagos/merchants
Content-Type: application/json

### ────────────────────────────────────────────────────────────────────────
### PROCESAMIENTO DE PAGOS CON TARJETA
### ────────────────────────────────────────────────────────────────────────

### 4.2 Pago Exitoso - Negocio 2002
POST {{baseUrl}}/pagos/charge
Content-Type: application/json

{
  "merchantId": 2002,
  "cardNumber": "4000003190164825",
  "amount": 250.50,
  "expDate": "10/30",
  "cvv": "731"
}

### 4.3 Pago con Tarjeta VISA
POST {{baseUrl}}/pagos/charge
Content-Type: application/json

{
  "merchantId": 2002,
  "cardNumber": "4000007714144690",
  "amount": 150.50,
  "expDate": "12/26",
  "cvv": "123"
}

### 4.4 Pago con Tarjeta Mastercard
POST {{baseUrl}}/pagos/charge
Content-Type: application/json

{
  "merchantId": 2002,
  "cardNumber": "5555555555554444",
  "amount": 200.00,
  "expDate": "12/26",
  "cvv": "456"
}

### 4.5 Pago Rechazado (tarjeta de prueba)
POST {{baseUrl}}/pagos/charge
Content-Type: application/json

{
  "merchantId": 2002,
  "cardNumber": "4000000000000002",
  "amount": 100.00,
  "expDate": "12/26",
  "cvv": "123"
}

### ────────────────────────────────────────────────────────────────────────
### CONSULTA DE TRANSACCIONES
### ────────────────────────────────────────────────────────────────────────

### 4.6 Consultar Transacción por ID
GET {{baseUrl}}/transacciones/100001
Content-Type: application/json

### 4.7 Listar Transacciones de un Merchant
GET {{baseUrl}}/transacciones/merchant/2002?limite=10
Content-Type: application/json

############################################################################

{
  "cuentaDestino": 210105,
  "monto": 100.00,
  "concepto": "Transferencia de prueba desde Heroku"
}

###

# Pagar orden en local
POST http://localhost:3000/api/v1/cliente/107/pagar-orden
Content-Type: application/json

{
  "codigoOrden": "ORD0997570",
  "claveAcceso": "1724"
}

### ==============================
### TESTING ADICIONAL
### ==============================

# Health check adicional
GET https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/widget/version
Content-Type: application/json

###

# Test de merchants válidos
GET https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/pagos/merchants
Content-Type: application/json

###

# Pago con merchant de base de datos
POST https://banco-gt-api-aa7d620b23f8.herokuapp.com/api/v1/pagos/charge
Content-Type: application/json

{
  "merchantId": "STORE_001_FASHION",
  "cardNumber": "4000007714144690",
  "amount": 75.50,
  "expDate": "12/26",
  "cvv": "123"
}

### ==============================
### PASARELA DE PAGOS - SIMPLIFICADO
### ==============================

# 1. Obtener merchants válidos
GET http://localhost:3000/api/v1/pagos/merchants
Content-Type: application/json

###

# 2. Pago EXITOSO (solo 5 campos)
POST http://localhost:3000/api/v1/pagos/charge
Content-Type: application/json

{
  "merchantId": "tecnoavanzada",
  "cardNumber": "4000007714144690",
  "amount": 150.50,
  "expDate": "10/27",
  "cvv": "551"
}

###

# 3. Pago con otro merchant
POST http://localhost:3000/api/v1/pagos/charge
Content-Type: application/json

{
  "merchantId": "Ca3f2b",
  "cardNumber": "5555555555554444",
  "amount": 250.00,
  "expDate": "12/26",
  "cvv": "123"
}

###

# 4. Pago RECHAZADO (tarjeta de prueba)
POST http://localhost:3000/api/v1/pagos/charge
Content-Type: application/json

{
  "merchantId": "SoCAB15",
  "cardNumber": "4000000000000002",
  "amount": 100.00,
  "expDate": "12/26",
  "cvv": "123"
}

###

### ==============================
### PASARELA DE PAGOS - NEGOCIO 2002
### ==============================

# 1. Verificar que el negocio 2002 existe
GET http://localhost:3000/api/v1/negocio/2002
Content-Type: application/json

###

# 2. Ver merchants válidos (debe incluir 2002)
GET http://localhost:3000/api/v1/pagos/merchants
Content-Type: application/json

###

# 3. Pago con tarjeta para negocio 2002
POST http://localhost:3000/api/v1/pagos/charge
Content-Type: application/json

{
  "merchantId": "2002",
  "cardNumber": "4000007714144690",
  "amount": 250.50,
  "expDate": "10/30",
  "cvv": "551"
}

###

# 4. Generar orden de pago para negocio 2002
POST http://localhost:3000/api/v1/negocio/2002/generar-orden
Content-Type: application/json

{
  "monto": 15.00,
  "concepto": "Pago de prueba negocio 2002",
  "vigenciaHoras": 48
}

###

# 5. Ver saldo del negocio 2002
GET http://localhost:3000/api/v1/negocio/2002/saldo
Content-Type: application/json

###

# 6. Ver movimientos del negocio 2002
GET http://localhost:3000/api/v1/negocio/2002/movimientos?limite=10
Content-Type: application/json

###

# 7. Dashboard del negocio 2002
GET http://localhost:3000/api/v1/negocio/2002/dashboard
Content-Type: application/json

###

###############################################################################
#                      1️⃣ LOGIN - CLIENTES                                    #
###############################################################################

### ────────────────────────────────────────────────────────────────────────
### 1.1 Login de Cliente con USERNAME
### ────────────────────────────────────────────────────────────────────────
# @name loginClienteUsername
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "PF0809",
  "password": "0809F7D8"
}

###

### ────────────────────────────────────────────────────────────────────────
### 1.2 Login de Cliente con DPI
### ────────────────────────────────────────────────────────────────────────
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "34567890123456",
  "password": "0809F7D8"
}

###

###############################################################################
#                      2️⃣ LOGIN - NEGOCIOS                                    #
###############################################################################

### ────────────────────────────────────────────────────────────────────────
### 2.1 Login de Negocio con USERNAME
### ────────────────────────────────────────────────────────────────────────
# @name loginNegocioUsername
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "tecnoavanzada",
  "password": "negocio789"
}

###

### ────────────────────────────────────────────────────────────────────────
### 2.2 Login de Negocio con NIT
### ────────────────────────────────────────────────────────────────────────
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "852147963-2",
  "password": "CAB15BDE"
}

###

###############################################################################
#                   4️⃣ VERIFICACIÓN DE TOKEN                                  #
###############################################################################

### ────────────────────────────────────────────────────────────────────────
### 4.1 Verificar Token Válido
### ─────────────────────────────────────────────────
# IMPORTANTE: Primero ejecuta el login (1.1 o 2.1) y copia el token
POST {{baseUrl}}/auth/verify
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjAwNCwidXNlcm5hbWUiOiJTb0NBQjE1IiwiZW1haWwiOiJjb250YWN0b0Bzb2x1Y2lvbmVzZGlnaXRhbGVzLmNvbSIsIm5vbWJyZSI6IlNvbHVjaW9uZXMgZGlnaXRhbGVzIFMuQS4iLCJuaXQiOiI4NTIxNDc5NjMtMiIsInRpcG8iOiJuZWdvY2lvIiwiaWF0IjoxNzYwNjc5NDU3LCJleHAiOjE3NjA3NjU4NTd9.lM3r1F9WYLBynBaGsXtDGfgUqYQSah67T--XnOsurGw

###

### ────────────────────────────────────────────────────────────────────────
### 4.2 Verificar Token sin Enviar Token
### ────────────────────────────────────────────────────────────────────────
POST {{baseUrl}}/auth/verify
Content-Type: application/json

###

###############################################################################
#                   5️⃣ OBTENER PERFIL COMPLETO                                #
###############################################################################

### ────────────────────────────────────────────────────────────────────────
### 5.1 Obtener Perfil de Cliente (con cuentas y tarjetas)
### ────────────────────────────────────────────────────────────────────────
# IMPORTANTE: Primero ejecuta el login de cliente y copia el token
GET {{baseUrl}}/auth/me
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjAwNCwidXNlcm5hbWUiOiJTb0NBQjE1IiwiZW1haWwiOiJjb250YWN0b0Bzb2x1Y2lvbmVzZGlnaXRhbGVzLmNvbSIsIm5vbWJyZSI6IlNvbHVjaW9uZXMgZGlnaXRhbGVzIFMuQS4iLCJuaXQiOiI4NTIxNDc5NjMtMiIsInRpcG8iOiJuZWdvY2lvIiwiaWF0IjoxNzYwNjc5NDU3LCJleHAiOjE3NjA3NjU4NTd9.lM3r1F9WYLBynBaGsXtDGfgUqYQSah67T--XnOsurGw

###

### ────────────────────────────────────────────────────────────────────────
### 5.2 Obtener Perfil de Negocio (con cuentas y tarjetas)
### ────────────────────────────────────────────────────────────────────────
# IMPORTANTE: Primero ejecuta el login de negocio y copia el token
GET {{baseUrl}}/auth/me
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjAwNCwidXNlcm5hbWUiOiJTb0NBQjE1IiwiZW1haWwiOiJjb250YWN0b0Bzb2x1Y2lvbmVzZGlnaXRhbGVzLmNvbSIsIm5vbWJyZSI6IlNvbHVjaW9uZXMgZGlnaXRhbGVzIFMuQS4iLCJuaXQiOiI4NTIxNDc5NjMtMiIsInRpcG8iOiJuZWdvY2lvIiwiaWF0IjoxNzYwNjc5NDU3LCJleHAiOjE3NjA3NjU4NTd9.lM3r1F9WYLBynBaGsXtDGfgUqYQSah67T--XnOsurGw

###

###############################################################################
#                   6️⃣ CAMBIAR CONTRASEÑA                                     #
###############################################################################

### ────────────────────────────────────────────────────────────────────────
### 6.1 Cambiar Contraseña de Cliente - Exitoso
### ────────────────────────────────────────────────────────────────────────
# IMPORTANTE: Primero ejecuta el login de cliente y copia el token
POST {{baseUrl}}/auth/change-password
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjAwNCwidXNlcm5hbWUiOiJTb0NBQjE1IiwiZW1haWwiOiJjb250YWN0b0Bzb2x1Y2lvbmVzZGlnaXRhbGVzLmNvbSIsIm5vbWJyZSI6IlNvbHVjaW9uZXMgZGlnaXRhbGVzIFMuQS4iLCJuaXQiOiI4NTIxNDc5NjMtMiIsInRpcG8iOiJuZWdvY2lvIiwiaWF0IjoxNzYwNjc5NDU3LCJleHAiOjE3NjA3NjU4NTd9.lM3r1F9WYLBynBaGsXtDGfgUqYQSah67T--XnOsurGw

{
  "passwordActual": "CAB15BDE",
  "passwordNueva": "12345678"
}

###

### ────────────────────────────────────────────────────────────────────────
### 6.2 Cambiar Contraseña - Contraseña Actual Incorrecta
### ────────────────────────────────────────────────────────────────────────
POST {{baseUrl}}/auth/change-password
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjAwNCwidXNlcm5hbWUiOiJTb0NBQjE1IiwiZW1haWwiOiJjb250YWN0b0Bzb2x1Y2lvbmVzZGlnaXRhbGVzLmNvbSIsIm5vbWJyZSI6IlNvbHVjaW9uZXMgZGlnaXRhbGVzIFMuQS4iLCJuaXQiOiI4NTIxNDc5NjMtMiIsInRpcG8iOiJuZWdvY2lvIiwiaWF0IjoxNzYwNjc5NDU3LCJleHAiOjE3NjA3NjU4NTd9.lM3r1F9WYLBynBaGsXtDGfgUqYQSah67T--XnOsurGw

{
  "passwordActual": "DKFUI",
  "passwordNueva": "123456789"
}

###

###############################################################################
#                   7️⃣ LOGOUT                                                 #
###############################################################################

### ────────────────────────────────────────────────────────────────────────
### 7.1 Cerrar Sesión
### ────────────────────────────────────────────────────────────────────────
POST {{baseUrl}}/auth/logout
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjAwNCwidXNlcm5hbWUiOiJTb0NBQjE1IiwiZW1haWwiOiJjb250YWN0b0Bzb2x1Y2lvbmVzZGlnaXRhbGVzLmNvbSIsIm5vbWJyZSI6IlNvbHVjaW9uZXMgZGlnaXRhbGVzIFMuQS4iLCJuaXQiOiI4NTIxNDc5NjMtMiIsInRpcG8iOiJuZWdvY2lvIiwiaWF0IjoxNzYwNjc5NDU3LCJleHAiOjE3NjA3NjU4NTd9.lM3r1F9WYLBynBaGsXtDGfgUqYQSah67T--XnOsurGw

###
